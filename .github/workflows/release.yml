name: Release Binaries

on: 
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
  workflow_dispatch:


jobs:
  releases-matrix:
    permissions: write-all
    name: Release Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude: []
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Run Tests
      run: go test -v ./...

    - name: Generate release tag
      id: generate_release_tag
      uses: amitsingh-007/next-release-tag@v6.1.0
      with:
        github_token: ${{ secrets.PAT }}
        tag_prefix: 'v'
        tag_template: 'yyyy-mm-dd-i'

    - name: Create Release Tag
      id: create_release_tag
      if: ${{ steps.generate_release_tag.outputs.next_release_tag != '' }}
      uses: rickstaa/action-create-tag@v1.7.2
      with:
        tag: "${{ steps.generate_release_tag.outputs.next_release_tag }}"
        message: "Release ${{ steps.generate_release_tag.outputs.next_release_tag }}"
        github_token: ${{ secrets.PAT }}

    - uses: wangyoucao577/go-release-action@v1.53
      with:
        github_token: ${{ secrets.PAT }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: 1.23
        ldflags: "-s -w -extldflags -static"
        release_tag: "${{ steps.generate_release_tag.outputs.next_release_tag }}"
        release_name: "${{ steps.generate_release_tag.outputs.next_release_tag }}"
        pre_command: export CGO_ENABLED=0
        binary_name: "ezdrop"
        asset_name: "ezdrop-${{ matrix.goos }}-${{ matrix.goarch }}"

